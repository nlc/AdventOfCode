ggplot(dat) + geom_line(aes(x=1:1023, y=p))
ggplot(dat) + geom_line(aes(x=1:1023, y=p)) + geom_line(aes(x=1:1023, y=d))
ggplot(dat) + geom_line(aes(x=1:1023, y=p)) + geom_line(aes(x=1:1023, y=d)) + axis(log=true)
ggplot(dat) + geom_line(aes(x=1:1023, y=p)) + geom_line(aes(x=1:1023, y=d))
ggplot(dat, aes(x=1:1023)) + geom_line(aes(y=p)) + geom_line(aes(y=d))
dat <- read.csv('/Users/nate/Desktop/resistances.csv')
plot dat
plot(dat)
plot(dat~1:306)
dat <- read.csv('/Users/nate/Desktop/resistances2.csv')
plot(dat)
library(stats)
fft(dat)
fft(dat$r)
plot(fft(dat$r))
fft(dat$r)
fft(dat$r)[1]
Mod(fft(dat$r)[1])
Mod(fft(dat$r))
Mod(fft(dat$r))[1]
plot(Mod(fft(dat$r))[1])
plot(Mod(fft(dat$r)))
plot(Mod(fft(dat$r)[2:-1]))
plot(Mod(fft(dat$r)[2:-305]))
plot(Mod(fft(dat$r)[2:305]))
max(Mod(fft(dat$r)[2:305]))
argmax(Mod(fft(dat$r)[2:305]))
which.max(Mod(fft(dat$r)[2:305]))
21*50
quit()
pops <- read.csv("/Users/nate/school_pop_dist.csv")
hist(pops)
pops
head(pops)
pops <- read.csv("/Users/nate/school_pop_dist.csv")
pops
hist(pops)
head(pops)
head(pops$population)
hist(pops$population)
?hist
hist(pops$population, breaks=10)
hist(pops$population, breaks=20)
hist(pops$population, breaks=50)
hist(pops$population, breaks=30)
hist(pops$population, breaks=30, name="asdf")
hist(pops$population, breaks=30, title="asdf")
hist(pops$population, breaks=30)
hist(pops$population, breaks=30)
hist(pops$population, breaks=30, col="red")
hist(pops$population, breaks=30, col="yellow")
hist(pops$population, breaks=30, col="green")
hist(pops$population, breaks=30, col="purple")
hist(pops$population, breaks=30, col="orange")
?hist
hist(pops$population, breaks=30, col="orange", main="asdf")
hist(pops$population, breaks=30, col="orange", main="Number of Schools with X Students")
?hist
hist(pops$population, breaks=30, col="orange", main="Number of Schools with X Students", xlab="Student Population")
function()
?function
?help
?function
esc
esc = function(theta) { 1 - theta / 4.0 }
esc(PI)
PI
opi
pi
esc(pi)
graph(esc)
plot(esc)
plot(esc, 0, pi)
esc(pi * 0.5)
esc(pi * 0.4)
esc(pi * 0.6)
esc(pi * 0.7)
esc(pi * 0.65)
esc(pi * 0.655)
esc(pi * 0.68)
esc(pi * 0.62)
esc(pi * 0.63)
esc(pi * 0.635)
esc(pi * 0.5)
esc(pi * 0.5)
0.5/(2*pi)
esc
read.csv('~/code/jlang/fiatlux.txt')
plot
plot read.csv('~/code/jlang/fiatlux.txt')
plot(read.csv('~/code/jlang/fiatlux.txt'))
data =read.csv('~/code/jlang/fiatlux.txt')
plot(i:length(data), data)
plot(1:length(data), data)
plot(1:length(data), data$magnitude)
plot(1:length(data$magnitude), data$magnitude)
hist(1:length(data$magnitude), data$magnitude)
hist(data$magnitude)
data = read.csv('~/income.tsv', sep="\t")
data
plot(data$X.ile)
plot(data$X2017)
data$X2017 <- as.numeric(gsub('[$,]', '', data$X2017))
plot(data$X2017)
data
data$X2017
data
data <- read.csv('~/contrast.csv')
heatmap(dat)
as.matrix(data)
as.matrix(data[-1])
heatmap(as.matrix(data[-1]))
heatmap(as.matrix(data[-1][-11]))
d
d <- read.csv('~/school_pop_dist.csv')
hist(d)
d
d$population
hist(d$population)
?hist
hist(d$population, breaks=50)
hist(d$population, breaks=30)
len(d$population)
length(d$population)
dat
dat <- read.csv('~/code/hill/entropy.csv')
dat
plot(dat$entropy~dat$dim)
log2(95)
plot(mean(dat$entropy)~dat$dim)
grouping()
?grouping
``````````````
mean(dat$entropy[dat$dim==2])
mean(dat$entropy[dat$dim==[2:15]])
mean(dat$entropy[dat$dim==2:15])
mean(dat$entropy[dat$dim])
mean(dat$entropy[dat$dim==3])
library("ggplot2")
library("dplyr")
?group_by
group_by(dat, dat$entropy)
group_by(dat, dat$dim)
?ggplot2
ggplot(data) + geom_point() + facet_grid()
?ggplot2
ggplot(dat) + geom_point() + facet_grid(rows=$dat$dim)
ggplot(dat) + geom_point() + facet_grid(rows=dat$dim)
ggplot(dat) + geom_point(x=dat$entropy) + facet_grid(rows=dat$dim)
ggplot(dat) + geom_point(x=dat$dim, y=mean(dat$dim)) + facet_grid(rows=dat$dim)
ggplot(dat) + geom_point(x=dat$dim, y=mean(dat$dim))
ggplot(dat) + geom_point(x=dat$dim, y=mean(entropy))
ggplot(dat) + geom_point(x=dat$dim, y=mean(dat$entropy))
ggplot(dat) + geom_point(x=dat$dim, y=dat$entropy))
ggplot(dat) + geom_point(x=dat$dim, y=dat$entropy)
ggplot() + geom_point(x=dat$dim, y=dat$entropy)
ggplot(dat, aes(x=dim, y=mean(entropy))
ggplot(dat, aes(x=dim, y=mean(entropy)))
ggplot(dat, aes(x=dim, y=mean(entropy))
dafs
ggplot(dat, aes(x=dim, y=mean(entropy)))
ggplot(dat, aes(x=dim, y=mean(entropy)))
ggplot(dat, aes(x=dim, y=mean(entropy))) + geom_point()
ggplot(dat, aes(x=dim, y=mean(entropy[dim=dim]))) + geom_point()
ggplot(dat, aes(x=dim, y=mean(entropy[dim=dim]))) + geom_point()
?facet
??facet
group_by(data$dim)
group_by(dat$dim)
group_by(dat, dat$dim)
dat <- read.csv("~/code/hill/mean_entropy.csv")
plot(dat)
dat <- read.csv("~/code/hill/mean_entropy_1000.csv")
plot(dat)
plot(dat)
plot(dat)
dat <- read.csv("~/code/hill/mean_entropy_1000.csv")
plot(dat)
plot(dat, log=true)
plot(dat, log=True)
plot(dat, log='true')
?plot
methods(plot)
ggplot(dat)
ggplot(dat) + geom_point
ggplot(dat) + geom_point()
ggplot(dat, aes(x=klen, y=entropy)) + geom_point()
ggplot(dat, aes(x=dat$klen, y=dat$entropy)) + geom_point()
dat
ggplot(dat, aes(x=klen, y=mean_entropy)) + geom_point()
dat <- read.csv("~/code/hill/mean_entropy_1000.csv")
plot(dat)
plot(dat$klen, dat$equiv_bits)
plot(dat$rootklen, dat$equiv_bits)
plot(dat$rootklen, dat$mean_entropy)
plot(dat$rootklen, dat$equiv_bits)
mapply(function, ...)
tmap
library('ggmap')
install.packages('ggmap')
library('ggmap')
?ggmap
exit()
quit()
pts
library('ggplot2')
pts <- read.csv('/Users/nate/code/survey/lat_long.csv')
orthoheight <- read.csv('/Users/nate/code/survey/ortho_height.csv')
markertypes <- read.csv('/Users/nate/code/survey/marker_types.csv')
lasthistory <- read.csv('/Users/nate/code/survey/last_history.csv')
pts <- merge(pts, orthoheight, by='code', all=TRUE)
pts <- merge(pts, markertypes, by='code', all=TRUE)
pts <- merge(pts, lasthistory, by='code', all=TRUE)
fit <- lm(orthoheight~poly(lon, 2), data=pts)
ggplot(pts) + geom_point(aes(x=lon, y=orthoheight)) + geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = FALSE, aes(x=lon, y=orthoheight))
pts_good <- pts[which(as.numeric(as.character(pts$yyyy))>2009 & pts$status == 'GOOD')]
source('~/.active-rstudio-document')
fit <- lm(orthoheight~poly(lon, 2), data=pts, raw=TRUE)
fit
pts_good
library('ggplot2')
pts <- read.csv('/Users/nate/code/survey/lat_long.csv')
orthoheight <- read.csv('/Users/nate/code/survey/ortho_height.csv')
markertypes <- read.csv('/Users/nate/code/survey/marker_types.csv')
lasthistory <- read.csv('/Users/nate/code/survey/last_history.csv')
pts <- merge(pts, orthoheight, by='code', all=TRUE)
pts <- merge(pts, markertypes, by='code', all=TRUE)
pts <- merge(pts, lasthistory, by='code', all=TRUE)
fit <- lm(orthoheight~poly(lon, 2), data=pts, raw=TRUE)
ggplot(pts) + geom_point(aes(x=lon, y=orthoheight)) + geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = FALSE, aes(x=lon, y=orthoheight))
pts_good <- pts[which(as.numeric(as.character(pts$yyyy))>2009 & pts$status == 'GOOD')]
pts_good <- pts[which(as.numeric(as.character(pts$yyyy))>2009 & pts$status == 'GOOD'),]
pts_good
ggplot() + geom_point(data=pts, aes(x=lon, y=lat))
ggplot() + geom_point(data=pts, aes(x=lon, y=lat)) + geom_point(data=pts_good, aes(x=lon, y=lat))
ggplot() + geom_point(data=pts, aes(x=lon, y=lat)) + geom_point(data=pts_good, aes(x=lon, y=lat, color='red'))
library(geosphere)
distm (c(lon1, lat1), c(lon2, lat2), fun = distHaversine)
pts
pts_good$goodsince09 = TRUE
pts_good
merge(pts, pts_good, by='code', all=TRUE)
merge(pts_good, pts, by='code', all=TRUE)
pts_good[c('code', 'goodsince09')]
merge(pts, pts_good[c('code', 'goodsince09'),], all=TRUE)
merge(pts, pts_good[c('code', 'goodsince09'),], by='code', all=TRUE)
pts
pts_good
aptloc <- c(38.935453, -94.675991)
dtoapt <- function(lon, lat) {
distm(c(lon, lat), aptloc, fun = distHaversine)
}
pts_good[1]
pts_good[1,]
pts_good[1,c(lat,lon)]
pts_good[1,c('lat','lon')]
pts_good[1,c('lon',lat')]
pts_good[1,c('lon','lat')]
pts_good[1,c('lon','lat')]
dtoapt(pts_good[1,c('lon','lat')])
dtoapt(pts_good$lon[1], pts_good$lat[1])
aptloc <- c(-94.675991, 38.935453)
dtoapt <- function(lon, lat) {
distm(c(lon, lat), aptloc, fun = distHaversine)
}
dtoapt(pts_good$lon[1], pts_good$lat[1])
pts_good$dtoapt <- dtoapt(pts_good$lon, pts_good$lat)
dtoapt(pts_good$lon, pts_good$lat)
pts_good$dtoapt <- with(pts_good, dtoapt(lon, lat))
pts_good$dtoapt <- apply(pts_good, dtoapt(pts_good$lon, pts_good$lat))
library('dplyr')
pts_good
pts_good %>% mutate(dta = dtoapt(lon, lat))
pts_good %>% mutate(dta = dtoapt(lon, lat))
q
within(pts_good, dta <- dtoapt(lon, lat))
dtoapt <- function(lon, lat) {
return(distm(c(lon, lat), aptloc, fun = distHaversine))
}
within(pts_good, dta <- dtoapt(lon, lat))
library('ggplot2')
library('geosphere')
library('dplyr')
pts <- read.csv('/Users/nate/code/survey/lat_long.csv')
orthoheight <- read.csv('/Users/nate/code/survey/ortho_height.csv')
markertypes <- read.csv('/Users/nate/code/survey/marker_types.csv')
lasthistory <- read.csv('/Users/nate/code/survey/last_history.csv')
pts <- merge(pts, orthoheight, by='code', all=TRUE)
pts <- merge(pts, markertypes, by='code', all=TRUE)
pts <- merge(pts, lasthistory, by='code', all=TRUE)
fit <- lm(orthoheight~poly(lon, 2), data=pts, raw=TRUE)
ggplot(pts) + geom_point(aes(x=lon, y=orthoheight)) + geom_smooth(method = "lm", formula = y ~ poly(x, 2), se = FALSE, aes(x=lon, y=orthoheight))
pts_good <- pts[which(as.numeric(as.character(pts$yyyy))>2009 & pts$status == 'GOOD'),]
aptloc <- c(-94.675991, 38.935453)
dtoapt <- function(lon, lat) {
return(distm(c(lon, lat), aptloc, fun = distHaversine))
}
pts_good$dta <- NA
for(i in 1:nrow(pts_good)) {
pts_good$dta[i] <- dtoapt(pts_good$lon[i], pts_good$lat[i])
}
dat
dat <- read.csv('~/supposedly_random.csv')
hist dat
hist(dat)
hist(dat$x)
dat <- read.csv('~/dist_guess.csv')
hist(dat$winner)
dat <- read.csv('~/dist_guess.csv')
hist(dat$winner)
hist(dat$winner)
?hist
hist(dat$winner, breaks=5)
hist(dat$winner, breaks=25)
hist(dat$winner, breaks=100)
dat <- read.csv('~/dist_guess.csv')
hist(dat$winner, breaks=100)
dat <- read.csv('~/dist_guess.csv')
hist(dat$winner, breaks=100)
dput(dat$winner)
?dput
dat
dat
dat <- read.csv("~/monosodium/e621index.csv")
dat
sessionInfo()
View(dat)
View(dat)
?delete
?rm
rm(Dat)
rm(dat)
dat <- read.csv("~/monosodium/e621index.csv")
head(dat)
exit()
quit()
dat <- read.csv('~/monosodium/diff_increasing.txt', sep=' ')
dat$tag <- as.factor(dat$tag)
dat
require('ggplot2')
ggplot(tail(dat, 50)) + geom_point()
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff))
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size=10))
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size=1))
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size=5))
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_bar(aes(x=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + scale_x_discrete(labels=tag) theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + scale_x_discrete(labels=tags) theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + scale_x_discrete(labels=tail(dat, 100)$tags) theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + scale_x_discrete(labels=tail(dat, 100)$tags) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + scale_x_discrete(labels=tail(dat, 100)$tags)
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(tail(dat, 250)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5))
ggplot(tail(dat, 250)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=2))
ggplot(tail(dat, 50)) + geom_point(aes(x=tag,y=diff)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + scale_x_discrete(labels=tail(dat, 100)$tags)
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tags),hjust=0, vjust=0)
ggplot(tail(dat, 100)) + geom_point(aes(x=(1:100), y=diff)) + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=0, vjust=0)
ggplot(tail(dat, 100), aes(x=(1:100), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=0, vjust=0)
ggplot(tail(dat, 100), aes(x=(1:100), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=0, vjust=0, angle=-45)
ggplot(tail(dat, 100), aes(x=(1:100), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=0, angle=-45)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=0, angle=-45)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=0, angle=-30, size=5)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=1, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=2, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=2, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.5, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=0, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.1, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 100), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.2, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 200), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.2, vjust=0, angle=-30, size=2)
ggplot(tail(dat, 200), aes(x=(1:length(diff)), y=diff)) + geom_point() + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.2, vjust=0, angle=-30, size=1)
ggplot(tail(dat, 200), aes(x=(1:length(diff)), y=diff)) + geom_point(log="y") + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.2, vjust=0, angle=-30, size=1)
ggplot(tail(dat, 200), aes(x=(1:length(diff)), y=diff)) + geom_point() + coord_trans(y="log") + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.2, vjust=0, angle=-30, size=1)
ggplot(tail(dat, 200), aes(x=(1:length(diff)), y=diff)) + geom_point() + coord_trans(y="log") + theme(axis.text.x = element_text(angle=70, hjust=1, size=5)) + geom_text(aes(label=tag),hjust=1.2, vjust=0, angle=-30, size=2)
savehistory("~/monosodium/Untitled.Rhistory")
dat
dat <- read.csv('~/ncome.csv')
plot(dat)
dat <- read.tsv('~/ncome.csv')
?read.csv
dat <- read.delim('~/income.tsv')
plot dat$X2017
plot(dat$X2017)
hist(dat$X2017)
dat$X2017
dat <- read.csv('~/tempincome.txt')
plot(dat)
plot(1:length(dat) ~ dat)
plot(1:length(dat) ~ dat$X2017)
plot(1:length(dat$X2017) ~ dat$X2017)
dat <- read.csv('~/tempincome.txt')
plot(dat)
dat <- read.csv('~/tempincome.txt', sep=' ')
plot(dat)
plot(dat$ile)
plot(dat$ile ~ dat$X2017)
dat <- read.csv('~/tempincome.txt', sep=' ')
plot(dat$ile)
plot(dat)
length(dta)
length(dat)
length(dat$ile)
strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.5023150.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.4954650.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.500360.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.5014180.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.5008620.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.5010960.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.5002270.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.5002360.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002")
strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.5023150.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.4954650.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.500360.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.5014180.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.5008620.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.5010960.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.5002270.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.5002360.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002", split=" ")
as.numeric strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.5023150.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.4954650.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.500360.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.5014180.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.5008620.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.5010960.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.5002270.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.5002360.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002", split=" ")
as.numeric(strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.5023150.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.4954650.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.500360.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.5014180.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.5008620.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.5010960.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.5002270.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.5002360.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002", split=" "))
dat <- strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.5023150.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.4954650.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.500360.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.5014180.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.5008620.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.5010960.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.5002270.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.5002360.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002", split=" ")
dat
as.numeric(dat)
as.numeric(dat[:])
as.integer(dat)
dat[[1]]
as.numeric(dat[[1]])
dat <- strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.5023150.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.4954650.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.500360.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.5014180.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.5008620.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.5010960.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.5002270.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.5002360.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002", split=" ")
dat
dat <- strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.502315 0.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.495465 0.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.50036 0.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.501418 0.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.500862 0.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.501096 0.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.500227 0.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.500236 0.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002
")
dat <- strsplit("0 0.5 0.458333 0.555556 0.512019 0.508 0.494048 0.506279 0.516226 0.502315 0.502722 0.504821 0.49504 0.50824 0.500033 0.506356 0.504647 0.502185 0.500938 0.495465 0.502896 0.503716 0.502418 0.500582 0.498451 0.503135 0.500962 0.500373 0.501794 0.50036 0.500075 0.500798 0.501703 0.502134 0.501136 0.500437 0.498577 0.500361 0.501254 0.501418 0.499733 0.500281 0.500192 0.49992 0.500809 0.501113 0.501527 0.500582 0.499561 0.500862 0.500375 0.500774 0.499824 0.49973 0.500821 0.499819 0.500199 0.500435 0.500552 0.501096 0.499741 0.499747 0.500813 0.500921 0.500928 0.499649 0.500262 0.500188 0.500317 0.500227 0.499552 0.500605 0.500181 0.50031 0.4999 0.500581 0.500607 0.499931 0.500065 0.500236 0.500045 0.500579 0.500092 0.50022 0.500109 0.500131 0.500015 0.500112 0.500317 0.499987 0.50002 0.499854 0.500405 0.500373 0.500159 0.500336 0.500259 0.50035 0.500001 0.50002
", split=" ")
dat
as.numeric(dat[[1]])
dat <- as.numeric(dat[[1]])
dat
plot(dat)
plot(dat[2:length(dat)])
length(dat[2:length(dat)])
dat
dat <- read.csv("~/code/GasAutomaton/expanded_decimal_map.txt", header=FALSE, sep=' ')
dat
plot(dat$V1~dat$V2)
dat
dat <- read.csv("~/code/AoC2019/Day02/grid.csv", header=FALSE)
dat
plot(dat)
heatmap(dat)
as.numeric(dat)
as.matrix(dat)
heatmap(as.matrix(dat))
dat <- read.csv("~/code/AoC2019/Day02/grid.csv")
dat
heatmap(as.matrix(dat))
?read.csv
dat <- read.csv("~/code/AoC2019/Day02/grid.csv", row.names=1)
dat
dat = matrix(scan("file.csv", what=numeric(), skip=1), nrow=392)
dat = matrix(scan("~/code/AoC2019/Day02/grid.csv", what=numeric(), skip=1), nrow=392)
?scan
dat = matrix(scan("~/code/AoC2019/Day02/grid.csv", what=numeric(), skip=1), nrow=21)
dat = matrix(scan("~/code/AoC2019/Day02/grid.csv", what=numeric(), skip=0), nrow=21)
dat
heatmap(dat)
heatmap(dat, Rowv=NA)
heatmap(dat, Rowv=NA, Colv=NA)
?read.csv()
read.table("~/code/AoC2019/Day02/ismonotonic.txt")
plot(read.table("~/code/AoC2019/Day02/ismonotonic.txt"))
monotonic
library('monoinc')
all(x == cummax(x))
all(dat == cummax(dat))
dat <- read.csv("~/code/AoC2019/Day12/vis.csv")
dat
head(dat, 10)
plot(head(dat, 10))
plot(head(dat, 100))
plot(head(dat$px1, 100))
plot(head(dat$px1, 1000))
plot(head(dat$px1, 10000))
plot(head(dat$py1, 1000))
plot(head(dat$py1, 10000))
dat <- read.csv("~/code/AoC2019/Day12/vis.csv")
plot(head(dat$E, 10000))
dat <- read.csv("~/code/AoC2019/Day12/vis.csv")
plot(dat$E)
plot(dat$U)
plot(dat$U1)
plot(dat$U2)
plot(dat$U3)
plot(dat$U4)
plot(dat$!T1)
plot(dat$T1)
plot(dat$T2)
plot(dat$T3)
plot(dat$T4)
dat <- read.csv("~/code/AoC2019/Day12/vis.csv")
plot(dat$T4)
plot(dat$E)
plot(dat$px1)
plot(dat$py1)
plot(dat$pz1)
colnames(dat)
for(colname in colnames(dat)) {echo(colname)}
for(colname in colnames(dat)) {print(colname)}
for(colname in colnames(dat)) {print(head(dat[colname], 3))}
# for(colname in colnames(dat)) {png(colname + ".png", width=1024, height=512); plot(dat[colname]); dev.off()}
setpwd("~/code/AoC2019/Day12/")
setwd("~/code/AoC2019/Day12/")
for(colname in colnames(dat)) {png(colname + ".png", width=1024, height=512); plot(dat[colname]); dev.off()}
for(colname in colnames(dat)) {png(paste(colname, ".png"), width=1024, height=512); plot(dat[colname]); dev.off()}
#for(colname in colnames(dat)) {png(paste(colname, ".png", sep=""), width=1024, height=512); plot(dat[colname]); dev.off()}
dat["E"]
plot(dat["E"])
plot(1:10)
