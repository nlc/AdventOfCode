require_relative '../../utilities/utils.rb'

class Walker < WalkerBase
  attr_accessor :grid, :visited

  def initialize(grid)
    @grid = grid
    @visited = {}

    x = nil
    y = nil
    @grid.each.with_index do |line, j|
      y = j if (x |= line.index('^'))
    end

    super(x, y, :N)
  end

  def walk(distance) # Walk forward
    case @d
    when :E
      @x += distance
    when :N
      @y -= distance
    when :W
      @x -= distance
    when :S
      @y += distance
    end
  end

  def in_grid
    x >= 0 && x < @grid.first.length && y >= 0 && y < @grid.length
  end

  def visit_current
    k = [@x, @y]
    @visited[k] = 0 unless @visited.key?(k)

    @visited[k] += 1
  end

  def step_until_blocked
    visit_current

    while in_grid && grid[y][x] != '#'
      walk
    end
  end
end

grid = File.readlines('input.txt')

walker = Walker.new(grid)

p walker.step_until_blocked
