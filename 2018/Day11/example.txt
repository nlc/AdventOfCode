if param is 8:

rid =. x + 10
5 -~ 10 | <. 100 %~ rid * 8 + y * rid

-> 4

if param is 57:

rid =. x + 10
5 -~ 10 | <. 100 %~ rid * 57 + y * rid

-> _5


* BAD *
3 ([ ([:8&+*) [:10&+]) 5

3 ([ (]*[:8&+*) [:10&+]) 5

3 ([ (100%~]*[:8&+*) [:10&+]) 5
* BAD *

3 (] (]*[:8&+*) [:10&+[) 5

3 (] (100%~]*[:8&+*) [:10&+[) 5

122 (] (5-~[:10&|[:<.100%~]*[:57&+*) [:10&+[) 79 NB. This one seems to work

,"0/~1+i.300 NB. Arrange indices

NB. Get 3 x 3 subarray at 1, 2
(1 2 ,: 3 3) ];.0 m

NB. Sum over n-dimensional array and reduce to 0-dim
+/^:_

So:

serial =: 6392
power =: ] (5-~[:10&|[:<.100%~]*[:serial&+*) [:10&+[
cells =: power"0/~1+i.300
+/^:_ (1 1 ,: 3 3) ];.0 power"0/~1+i.300


Wait:

l=:(]=3+4=*)[:+/^:2(,"0/~@i:1)&|.

So:

>./^:_([:+/^:2(,"0/~@i:1)&|.)cells NB. Gets the maximum 3x3 value

>./^:_([:+/^:2(,"0/~@i:1)&|.)(] (5-~[:10&|[:<.100%~]*[:serial&+*) [:10&+[)"0/~1+i.300 NB. lmao

serial =: 6392
power =: ] (5-~[:10&|[:<.100%~]*[:serial&+*) [:10&+[
cells =: power"0/~1+i.300
clusters=:([:+/^:2(,"0/~@i:1)&|.)cells
>./^:_ clusters NB. Max of clusters => 30
1 i.~(30=,clusters) NB. index of raveled clusters -> 6058
(300&|,%&300) 6058 NB. Turn into x, y -> 58 20.1933
NB. i. e.
(300&|,%&300) 1 i.~(30=,clusters)

SO: 

serial =: 6392
power =: ] (5-~[:10&|[:<.100%~]*[:serial&+*) [:10&+[
cells =: power"0/~1+i.300
clusters=:([:+/^:2(,"0/~@i:1)&|.)cells
max =: >./^:_ clusters
(300&|,%&300) 1 i.~(max=,clusters)
<.(300&|,~%&300)max i.~,clusters
